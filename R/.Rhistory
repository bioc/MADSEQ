levels(a) = c("0%","10%","20%","30%","40%","50%","60%","70%","80%","90%","100%")
a
tail(a)
table(a)
table(monosomy_AAF_df$level)
levels = c(0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,0.99)
even_levels = c(0,0.2,0.4,0.6,0.8,0.99)## level of mosaicism we will simulate
monosomy_AAF_df = NULL
monosomy_cov_df = NULL
for (tmp_level in levels){
tmp_data = generateData(nSNP=1000,nCov=1000,coverage=100,
vartom=30,m=0.5,fraction=tmp_level,
type="monosomy",noise = 0.001)  ## simulate data at 1000 sites and 100X coverage for different mosaic levels
tmp_AAF_df = data.frame(start=seq(1:tmp_data$nSNP),level=tmp_level,AAF=tmp_data$z/tmp_data$N) ## generate df for AAF
monosomy_AAF_df = rbind(monosomy_AAF_df,tmp_AAF_df)
tmp_cov_df = data.frame(start=seq(1:tmp_data$nSites),level=tmp_level,cov=tmp_data$N_cov)
monosomy_cov_df = rbind(monosomy_cov_df,tmp_cov_df)
}
tmp_add = data.frame(level=0,start=-200,AAF=0.5)
monosomy_AAF_df = rbind(tmp_add,monosomy_AAF_df)
monosomy_AAF_df$group = ifelse(monosomy_AAF_df$level%in%even_levels,1,2)
monosomy_AAF_df$group = factor(monosomy_AAF_df$group)
monosomy_AAF_df$level = factor(monosomy_AAF_df$level,levels=levels)
levels(monosomy_AAF_df$level) = c("0%","10%","20%","30%","40%","50%","60%","70%","80%","90%","100%")
monosomy_AAF_df$level
table(monosomy_AAF_df$level)
g = ggplot(monosomy_AAF_df,aes(x=start,y=AAF,colour=group)) + geom_point(size=0.5) + ylim(0,1)
g = g + facet_wrap(~level,switch = "x",scales="free_x",nrow=1) + theme_classic()
g = g + labs(x="",y="Alternative Allele Frequency")
g = g + scale_colour_manual(values=c("1"="blue","2"="cornflowerblue"))
g = g + scale_x_discrete(labels=)
g = g + theme(strip.text = element_text(size=14),
axis.title.y = element_text(size=16),
axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(size=14),
plot.title = element_text(size=16,face="bold"),
legend.position = "none",
strip.background  = element_blank(),
strip.placement = "outside")
g
g = ggplot(monosomy_AAF_df,aes(x=start,y=AAF,colour=group)) + geom_point(size=0.5) + ylim(0,1)
g = g + facet_wrap(~level,switch = "x",scales="free_x",nrow=1) + theme_classic()
g = g + labs(x="",y="Alternative Allele Frequency")
g = g + scale_colour_manual(values=c("1"="blue","2"="cornflowerblue"))
g = g + theme(strip.text = element_text(size=14),
axis.title.y = element_text(size=16),
axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(size=14),
plot.title = element_text(size=16,face="bold"),
legend.position = "none",
strip.background  = element_blank(),
strip.placement = "outside")
g
head(monosomy_cov_df)
head(tmp_AAF_df)
head(monosomy_AAF_df)
monosomy_AAF_df = NULL
monosomy_cov_df = NULL
for (tmp_level in levels){
tmp_data = generateData(nSNP=1000,nCov=1000,coverage=100,
vartom=30,m=0.5,fraction=tmp_level,
type="monosomy",noise = 0.001)  ## simulate data at 1000 sites and 100X coverage for different mosaic levels
tmp_AAF_df = data.frame(start=seq(1:tmp_data$nSNP),level=tmp_level,AAF=tmp_data$z/tmp_data$N) ## generate df for AAF
monosomy_AAF_df = rbind(monosomy_AAF_df,tmp_AAF_df)
tmp_cov_df = data.frame(start=seq(1:tmp_data$nSites),level=tmp_level,cov=tmp_data$N_cov)
monosomy_cov_df = rbind(monosomy_cov_df,tmp_cov_df)
}
head(monosomy_AAF_df)
tmp_add = data.frame(start=-200,level=0,AAF=0.5)
monosomy_AAF_df = rbind(tmp_add,monosomy_AAF_df)
head(monosomy_AAF_df)
head(monosomy_cov_df)
tmp_add_cov = data.frame(start=-200,level=0,cov=100)
monosomy_cov_df = rbind(tmp_add_cov,monosomy_cov_df)
monosomy_cov_df$group = ifelse(monosomy_cov_df$level%in%even_levels,1,2)
monosomy_cov_df$group = factor(monosomy_cov_df$group)
monosomy_cov_df$level = factor(monosomy_cov_df$level,levels=levels)
levels(monosomy_cov_df$level) = c("0%","10%","20%","30%","40%","50%","60%","70%","80%","90%","100%")
head(monosomy_cov_df)
tail(monosomy_cov_df)
g_cov = ggplot(monosomy_cov_df,aes(x=start,y=cov,colour=group)) + geom_point(size=0.5) + ylim(-200,400)
g_cov = g_cov + facet_wrap(~level,switch = "x",scales="free_x",nrow=1) + theme_classic()
g_cov = g_cov + geom_hline(yintercept = mean(monosomy_cov_df$cov),colour="red",linetype=2)
g_cov = g_cov + labs(x="",y="Relative Sequencing Depth")
g_cov = g_cov + scale_colour_manual(values=c("1"="blue","2"="cornflowerblue"))
g_cov = g_cov + scale_y_continuous(limits=c(50,100,150),labels = c(50,100,150))
g_cov = ggplot(monosomy_cov_df,aes(x=start,y=cov,colour=group)) + geom_point(size=0.5) + ylim(-200,400)
g_cov = g_cov + facet_wrap(~level,switch = "x",scales="free_x",nrow=1) + theme_classic()
g_cov = g_cov + geom_hline(yintercept = mean(monosomy_cov_df$cov),colour="red",linetype=2)
g_cov = g_cov + labs(x="",y="Relative Sequencing Depth")
g_cov = g_cov + scale_colour_manual(values=c("1"="blue","2"="cornflowerblue"))
g_cov = g_cov + scale_y_continuous(breads=c(50,100,150),labels = c(50,100,150))
g_cov = g_cov + scale_y_continuous(breaks=c(50,100,150),labels = c(50,100,150))
g_cov = g_cov + theme(strip.text = element_text(size=14),
axis.title = element_text(size=16),
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
plot.title=element_blank(),
axis.text.y = element_text(size=14),
legend.position = "none",
strip.background  = element_blank(),
strip.placement = "outside")
g_cov
g_cov = ggplot(monosomy_cov_df,aes(x=start,y=cov,colour=group)) + geom_point(size=0.5) + ylim(-200,400)
g_cov = g_cov + facet_wrap(~level,switch = "x",scales="free_x",nrow=1) + theme_classic()
g_cov = g_cov + geom_hline(yintercept = mean(monosomy_cov_df$cov),colour="red",linetype=2)
g_cov = g_cov + labs(x="",y="Relative Sequencing Depth")
g_cov = g_cov + scale_colour_manual(values=c("1"="blue","2"="cornflowerblue"))
g_cov = g_cov + scale_y_continuous(limits=c(-200,400),breaks=c(50,100,150),labels = c(50,100,150))
g_cov = g_cov + theme(strip.text = element_text(size=14),
axis.title = element_text(size=16),
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
plot.title=element_blank(),
axis.text.y = element_text(size=14),
legend.position = "none",
strip.background  = element_blank(),
strip.placement = "outside")
g_cov
monosomy_AAF_df = NULL
monosomy_cov_df = NULL
for (tmp_level in levels){
tmp_data = generateData(nSNP=1000,nCov=1000,coverage=100,
vartom=5,m=0.5,fraction=tmp_level,
type="monosomy",noise = 0.001)  ## simulate data at 1000 sites and 100X coverage for different mosaic levels
tmp_AAF_df = data.frame(start=seq(1:tmp_data$nSNP),level=tmp_level,AAF=tmp_data$z/tmp_data$N) ## generate df for AAF
monosomy_AAF_df = rbind(monosomy_AAF_df,tmp_AAF_df)
tmp_cov_df = data.frame(start=seq(1:tmp_data$nSites),level=tmp_level,cov=tmp_data$N_cov)
monosomy_cov_df = rbind(monosomy_cov_df,tmp_cov_df)
}
tmp_add = data.frame(start=-200,level=0,AAF=0.5)
monosomy_AAF_df = rbind(tmp_add,monosomy_AAF_df)
monosomy_AAF_df$group = ifelse(monosomy_AAF_df$level%in%even_levels,1,2)
monosomy_AAF_df$group = factor(monosomy_AAF_df$group)
monosomy_AAF_df$level = factor(monosomy_AAF_df$level,levels=levels)
levels(monosomy_AAF_df$level) = c("0%","10%","20%","30%","40%","50%","60%","70%","80%","90%","100%")
tmp_add_cov = data.frame(start=-200,level=0,cov=100)
monosomy_cov_df = rbind(tmp_add_cov,monosomy_cov_df)
monosomy_cov_df$group = ifelse(monosomy_cov_df$level%in%even_levels,1,2)
monosomy_cov_df$group = factor(monosomy_cov_df$group)
monosomy_cov_df$level = factor(monosomy_cov_df$level,levels=levels)
levels(monosomy_cov_df$level) = c("0%","10%","20%","30%","40%","50%","60%","70%","80%","90%","100%")
monosomy_AAF_g = ggplot(monosomy_AAF_df,aes(x=start,y=AAF,colour=group)) + geom_point(size=0.5) + ylim(0,1)
monosomy_AAF_g = monosomy_AAF_g + facet_wrap(~level,switch = "x",scales="free_x",nrow=1) + theme_classic()
monosomy_AAF_g = monosomy_AAF_g + labs(x="",y="Alternative Allele Frequency")
monosomy_AAF_g = monosomy_AAF_g + scale_colour_manual(values=c("1"="blue","2"="cornflowerblue"))
monosomy_AAF_g = monosomy_AAF_g + theme(strip.text = element_text(size=14),
axis.title.y = element_text(size=16),
axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(size=14),
plot.title = element_text(size=16,face="bold"),
legend.position = "none",
strip.background  = element_blank(),
strip.placement = "outside")
g_cov = ggplot(monosomy_cov_df,aes(x=start,y=cov,colour=group)) + geom_point(size=0.5) + ylim(-200,400)
g_cov = g_cov + facet_wrap(~level,switch = "x",scales="free_x",nrow=1) + theme_classic()
g_cov = g_cov + geom_hline(yintercept = mean(monosomy_cov_df$cov),colour="red",linetype=2)
g_cov = g_cov + labs(x="",y="Relative Sequencing Depth")
g_cov = g_cov + scale_colour_manual(values=c("1"="blue","2"="cornflowerblue"))
g_cov = g_cov + scale_y_continuous(limits=c(-200,400),breaks=c(50,100,150),labels = c(50,100,150))
g_cov = g_cov + theme(strip.text = element_text(size=14),
axis.title = element_text(size=16),
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
plot.title=element_blank(),
axis.text.y = element_text(size=14),
legend.position = "none",
strip.background  = element_blank(),
strip.placement = "outside")
g_cov
str(tmp_data)
monosomy_AAF_df = NULL
monosomy_cov_df = NULL
for (tmp_level in levels){
tmp_data = generateData(nSNP=1000,nCov=1000,coverage=100,
vartom=5,m=0.5,fraction=tmp_level,
type="monosomy",noise = 0.001)  ## simulate data at 1000 sites and 100X coverage for different mosaic levels
tmp_AAF_df = data.frame(start=seq(1:tmp_data$nSNP),level=tmp_level,AAF=tmp_data$z/tmp_data$N) ## generate df for AAF
monosomy_AAF_df = rbind(monosomy_AAF_df,tmp_AAF_df)
tmp_cov_df = data.frame(start=seq(1:tmp_data$nSites),level=tmp_level,cov=mean(tmp_data$N_cov/tmp_data$m0)*(tmp_data$N_cov))
monosomy_cov_df = rbind(monosomy_cov_df,tmp_cov_df)
}
tmp_add = data.frame(start=-200,level=0,AAF=0.5)
monosomy_AAF_df = rbind(tmp_add,monosomy_AAF_df)
monosomy_AAF_df$group = ifelse(monosomy_AAF_df$level%in%even_levels,1,2)
monosomy_AAF_df$group = factor(monosomy_AAF_df$group)
monosomy_AAF_df$level = factor(monosomy_AAF_df$level,levels=levels)
levels(monosomy_AAF_df$level) = c("0%","10%","20%","30%","40%","50%","60%","70%","80%","90%","100%")
tmp_add_cov = data.frame(start=-200,level=0,cov=100)
monosomy_cov_df = rbind(tmp_add_cov,monosomy_cov_df)
monosomy_cov_df$group = ifelse(monosomy_cov_df$level%in%even_levels,1,2)
monosomy_cov_df$group = factor(monosomy_cov_df$group)
monosomy_cov_df$level = factor(monosomy_cov_df$level,levels=levels)
levels(monosomy_cov_df$level) = c("0%","10%","20%","30%","40%","50%","60%","70%","80%","90%","100%")
monosomy_AAF_g = ggplot(monosomy_AAF_df,aes(x=start,y=AAF,colour=group)) + geom_point(size=0.5) + ylim(0,1)
monosomy_AAF_g = monosomy_AAF_g + facet_wrap(~level,switch = "x",scales="free_x",nrow=1) + theme_classic()
monosomy_AAF_g = monosomy_AAF_g + labs(x="",y="Alternative Allele Frequency")
monosomy_AAF_g = monosomy_AAF_g + scale_colour_manual(values=c("1"="blue","2"="cornflowerblue"))
monosomy_AAF_g = monosomy_AAF_g + theme(strip.text = element_text(size=14),
axis.title.y = element_text(size=16),
axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(size=14),
plot.title = element_text(size=16,face="bold"),
legend.position = "none",
strip.background  = element_blank(),
strip.placement = "outside")
g_cov = ggplot(monosomy_cov_df,aes(x=start,y=cov,colour=group)) + geom_point(size=0.5) + ylim(-200,400)
g_cov = g_cov + facet_wrap(~level,switch = "x",scales="free_x",nrow=1) + theme_classic()
g_cov = g_cov + geom_hline(yintercept = mean(monosomy_cov_df$cov),colour="red",linetype=2)
g_cov = g_cov + labs(x="",y="Relative Sequencing Depth")
g_cov = g_cov + scale_colour_manual(values=c("1"="blue","2"="cornflowerblue"))
g_cov = g_cov + scale_y_continuous(limits=c(-200,400),breaks=c(50,100,150),labels = c(50,100,150))
g_cov = g_cov + theme(strip.text = element_text(size=14),
axis.title = element_text(size=16),
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
plot.title=element_blank(),
axis.text.y = element_text(size=14),
legend.position = "none",
strip.background  = element_blank(),
strip.placement = "outside")
g_cov
grid.arrange(monosomy_AAF_g,monosomy_cov_g,nrow=1)
monosomy_cov_g = ggplot(monosomy_cov_df,aes(x=start,y=cov,colour=group)) + geom_point(size=0.5) + ylim(-200,400)
monosomy_cov_g = monosomy_cov_g + facet_wrap(~level,switch = "x",scales="free_x",nrow=1) + theme_classic()
monosomy_cov_g = monosomy_cov_g + geom_hline(yintercept = 100,colour="red",linetype=2)
monosomy_cov_g = monosomy_cov_g + labs(x="",y="Relative Sequencing Depth")
monosomy_cov_g = monosomy_cov_g + scale_colour_manual(values=c("1"="blue","2"="cornflowerblue"))
monosomy_cov_g = monosomy_cov_g + scale_y_continuous(limits=c(-200,400),breaks=c(50,100,150),labels = c(50,100,150))
monosomy_cov_g = monosomy_cov_g + theme(strip.text = element_text(size=14),
axis.title = element_text(size=16),
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
plot.title=element_blank(),
axis.text.y = element_text(size=14),
legend.position = "none",
strip.background  = element_blank(),
strip.placement = "outside")
grid.arrange(monosomy_AAF_g,monosomy_cov_g,nrow=1)
trisomy_AAF_df = NULL
trisomy_cov_df = NULL
for (tmp_level in levels){
tmp_data = generateData(nSNP=1000,nCov=1000,coverage=100,
vartom=5,m=0.5,fraction=tmp_level,
type="trisomy",noise = 0.001)  ## simulate data at 1000 sites and 100X coverage for different mosaic levels
tmp_AAF_df = data.frame(start=seq(1:tmp_data$nSNP),level=tmp_level,AAF=tmp_data$z/tmp_data$N) ## generate df for AAF
trisomy_AAF_df = rbind(trisomy_AAF_df,tmp_AAF_df)
tmp_cov_df = data.frame(start=seq(1:tmp_data$nSites),level=tmp_level,cov=mean(tmp_data$N_cov/tmp_data$m0)*(tmp_data$N_cov))
trisomy_cov_df = rbind(trisomy_cov_df,tmp_cov_df)
}
tmp_add = data.frame(start=-200,level=0,AAF=0.5)
trisomy_AAF_df = rbind(tmp_add,trisomy_AAF_df)
trisomy_AAF_df$group = ifelse(trisomy_AAF_df$level%in%even_levels,1,2)
trisomy_AAF_df$group = factor(trisomy_AAF_df$group)
trisomy_AAF_df$level = factor(trisomy_AAF_df$level,levels=levels)
levels(trisomy_AAF_df$level) = c("0%","10%","20%","30%","40%","50%","60%","70%","80%","90%","100%")
tmp_add_cov = data.frame(start=-200,level=0,cov=100)
trisomy_cov_df = rbind(tmp_add_cov,trisomy_cov_df)
trisomy_cov_df$group = ifelse(trisomy_cov_df$level%in%even_levels,1,2)
trisomy_cov_df$group = factor(trisomy_cov_df$group)
trisomy_cov_df$level = factor(trisomy_cov_df$level,levels=levels)
levels(trisomy_cov_df$level) = c("0%","10%","20%","30%","40%","50%","60%","70%","80%","90%","100%")
trisomy_AAF_g = ggplot(trisomy_AAF_df,aes(x=start,y=AAF,colour=group)) + geom_point(size=0.5) + ylim(0,1)
trisomy_AAF_g = trisomy_AAF_g + facet_wrap(~level,switch = "x",scales="free_x",nrow=1) + theme_classic()
trisomy_AAF_g = trisomy_AAF_g + labs(x="",y="Alternative Allele Frequency")
trisomy_AAF_g = trisomy_AAF_g + scale_colour_manual(values=c("1"="blue","2"="cornflowerblue"))
trisomy_AAF_g = trisomy_AAF_g + theme(strip.text = element_text(size=14),
axis.title.y = element_text(size=16),
axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(size=14),
plot.title = element_text(size=16,face="bold"),
legend.position = "none",
strip.background  = element_blank(),
strip.placement = "outside")
trisomy_cov_g = ggplot(trisomy_cov_df,aes(x=start,y=cov,colour=group)) + geom_point(size=0.5) + ylim(-200,400)
trisomy_cov_g = trisomy_cov_g + facet_wrap(~level,switch = "x",scales="free_x",nrow=1) + theme_classic()
trisomy_cov_g = trisomy_cov_g + geom_hline(yintercept = 100,colour="red",linetype=2)
trisomy_cov_g = trisomy_cov_g + labs(x="",y="Relative Sequencing Depth")
trisomy_cov_g = trisomy_cov_g + scale_colour_manual(values=c("1"="blue","2"="cornflowerblue"))
trisomy_cov_g = trisomy_cov_g + scale_y_continuous(limits=c(-200,400),breaks=c(50,100,150),labels = c(50,100,150))
trisomy_cov_g = trisomy_cov_g + theme(strip.text = element_text(size=14),
axis.title = element_text(size=16),
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
plot.title=element_blank(),
axis.text.y = element_text(size=14),
legend.position = "none",
strip.background  = element_blank(),
strip.placement = "outside")
grid.arrange(trisomy_AAF_g,trisomy_cov_g,nrow=1)
meiosis_AAF_df = NULL
meiosis_cov_df = NULL
for (tmp_level in levels){
tmp_data = generateData(nSNP=1000,nCov=1000,coverage=100,
vartom=5,m=0.5,fraction=tmp_level,
type="meiosis",noise = 0.001)  ## simulate data at 1000 sites and 100X coverage for different mosaic levels
tmp_AAF_df = data.frame(start=seq(1:tmp_data$nSNP),level=tmp_level,AAF=tmp_data$z/tmp_data$N) ## generate df for AAF
meiosis_AAF_df = rbind(meiosis_AAF_df,tmp_AAF_df)
tmp_cov_df = data.frame(start=seq(1:tmp_data$nSites),level=tmp_level,cov=mean(tmp_data$N_cov/tmp_data$m0)*(tmp_data$N_cov))
meiosis_cov_df = rbind(meiosis_cov_df,tmp_cov_df)
}
tmp_level
meiosis_AAF_df = NULL
meiosis_cov_df = NULL
for (tmp_level in levels){
if(tmp_level==0){
tmp_data = generateData(nSNP=1000,nCov=1000,coverage=100,
vartom=5,m=0.5,fraction=tmp_level,
type="normal",noise = 0.001)
}
tmp_data = generateData(nSNP=1000,nCov=1000,coverage=100,
vartom=5,m=0.5,fraction=tmp_level,
type="meiosis",noise = 0.001)  ## simulate data at 1000 sites and 100X coverage for different mosaic levels
tmp_AAF_df = data.frame(start=seq(1:tmp_data$nSNP),level=tmp_level,AAF=tmp_data$z/tmp_data$N) ## generate df for AAF
meiosis_AAF_df = rbind(meiosis_AAF_df,tmp_AAF_df)
tmp_cov_df = data.frame(start=seq(1:tmp_data$nSites),level=tmp_level,cov=mean(tmp_data$N_cov/tmp_data$m0)*(tmp_data$N_cov))
meiosis_cov_df = rbind(meiosis_cov_df,tmp_cov_df)
}
level
tmp_level
a = generateData(nSNP=1000,nCov=1000,coverage=100,
vartom=5,m=0.5,fraction=0.1,
type="meiosis",noise = 0.001)
meiosis_AAF_df = NULL
meiosis_cov_df = NULL
for (tmp_level in levels){
if(tmp_level==0){
tmp_data = generateData(nSNP=1000,nCov=1000,coverage=100,
vartom=5,m=0.5,fraction=tmp_level,
type="normal",noise = 0.001)
}
else{
tmp_data = generateData(nSNP=1000,nCov=1000,coverage=100,
vartom=5,m=0.5,fraction=tmp_level,
type="meiosis",noise = 0.001)  ## simulate data at 1000 sites and 100X coverage for different mosaic levels
}
tmp_AAF_df = data.frame(start=seq(1:tmp_data$nSNP),level=tmp_level,AAF=tmp_data$z/tmp_data$N) ## generate df for AAF
meiosis_AAF_df = rbind(meiosis_AAF_df,tmp_AAF_df)
tmp_cov_df = data.frame(start=seq(1:tmp_data$nSites),level=tmp_level,cov=mean(tmp_data$N_cov/tmp_data$m0)*(tmp_data$N_cov))
meiosis_cov_df = rbind(meiosis_cov_df,tmp_cov_df)
}
tmp_add = data.frame(start=-200,level=0,AAF=0.5)
meiosis_AAF_df = rbind(tmp_add,meiosis_AAF_df)
meiosis_AAF_df$group = ifelse(meiosis_AAF_df$level%in%even_levels,1,2)
meiosis_AAF_df$group = factor(meiosis_AAF_df$group)
meiosis_AAF_df$level = factor(meiosis_AAF_df$level,levels=levels)
levels(meiosis_AAF_df$level) = c("0%","10%","20%","30%","40%","50%","60%","70%","80%","90%","100%")
tmp_add_cov = data.frame(start=-200,level=0,cov=100)
meiosis_cov_df = rbind(tmp_add_cov,meiosis_cov_df)
meiosis_cov_df$group = ifelse(meiosis_cov_df$level%in%even_levels,1,2)
meiosis_cov_df$group = factor(meiosis_cov_df$group)
meiosis_cov_df$level = factor(meiosis_cov_df$level,levels=levels)
levels(meiosis_cov_df$level) = c("0%","10%","20%","30%","40%","50%","60%","70%","80%","90%","100%")
meiosis_AAF_g = ggplot(meiosis_AAF_df,aes(x=start,y=AAF,colour=group)) + geom_point(size=0.5) + ylim(0,1)
meiosis_AAF_g = meiosis_AAF_g + facet_wrap(~level,switch = "x",scales="free_x",nrow=1) + theme_classic()
meiosis_AAF_g = meiosis_AAF_g + labs(x="",y="Alternative Allele Frequency")
meiosis_AAF_g = meiosis_AAF_g + scale_colour_manual(values=c("1"="blue","2"="cornflowerblue"))
meiosis_AAF_g = meiosis_AAF_g + theme(strip.text = element_text(size=14),
axis.title.y = element_text(size=16),
axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(size=14),
plot.title = element_text(size=16,face="bold"),
legend.position = "none",
strip.background  = element_blank(),
strip.placement = "outside")
meiosis_cov_g = ggplot(meiosis_cov_df,aes(x=start,y=cov,colour=group)) + geom_point(size=0.5)
meiosis_cov_g = meiosis_cov_g + facet_wrap(~level,switch = "x",scales="free_x",nrow=1) + theme_classic()
meiosis_cov_g = meiosis_cov_g + geom_hline(yintercept = 100,colour="red",linetype=2)
meiosis_cov_g = meiosis_cov_g + labs(x="",y="Relative Sequencing Depth")
meiosis_cov_g = meiosis_cov_g + scale_colour_manual(values=c("1"="blue","2"="cornflowerblue"))
meiosis_cov_g = meiosis_cov_g + scale_y_continuous(limits=c(-200,400),breaks=c(50,100,150),labels = c(50,100,150))
meiosis_cov_g = meiosis_cov_g + theme(strip.text = element_text(size=14),
axis.title = element_text(size=16),
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
plot.title=element_blank(),
axis.text.y = element_text(size=14),
legend.position = "none",
strip.background  = element_blank(),
strip.placement = "outside")
grid.arrange(meiosis_AAF_g,meiosis_cov_g,nrow=1)
LOH_AAF_df = NULL
LOH_cov_df = NULL
for (tmp_level in levels){
if(tmp_level==0){
tmp_data = generateData(nSNP=1000,nCov=1000,coverage=100,
vartom=5,m=0.5,fraction=tmp_level,
type="normal",noise = 0.001)
}
else{
tmp_data = generateData(nSNP=1000,nCov=1000,coverage=100,
vartom=5,m=0.5,fraction=tmp_level,
type="LOH",noise = 0.001)  ## simulate data at 1000 sites and 100X coverage for different mosaic levels
}
tmp_AAF_df = data.frame(start=seq(1:tmp_data$nSNP),level=tmp_level,AAF=tmp_data$z/tmp_data$N) ## generate df for AAF
LOH_AAF_df = rbind(LOH_AAF_df,tmp_AAF_df)
tmp_cov_df = data.frame(start=seq(1:tmp_data$nSites),level=tmp_level,cov=mean(tmp_data$N_cov/tmp_data$m0)*(tmp_data$N_cov))
LOH_cov_df = rbind(LOH_cov_df,tmp_cov_df)
}
tmp_add = data.frame(start=-200,level=0,AAF=0.5)
LOH_AAF_df = rbind(tmp_add,LOH_AAF_df)
LOH_AAF_df$group = ifelse(LOH_AAF_df$level%in%even_levels,1,2)
LOH_AAF_df$group = factor(LOH_AAF_df$group)
LOH_AAF_df$level = factor(LOH_AAF_df$level,levels=levels)
levels(LOH_AAF_df$level) = c("0%","10%","20%","30%","40%","50%","60%","70%","80%","90%","100%")
tmp_add_cov = data.frame(start=-200,level=0,cov=100)
LOH_cov_df = rbind(tmp_add_cov,LOH_cov_df)
LOH_cov_df$group = ifelse(LOH_cov_df$level%in%even_levels,1,2)
LOH_cov_df$group = factor(LOH_cov_df$group)
LOH_cov_df$level = factor(LOH_cov_df$level,levels=levels)
levels(LOH_cov_df$level) = c("0%","10%","20%","30%","40%","50%","60%","70%","80%","90%","100%")
LOH_AAF_g = ggplot(LOH_AAF_df,aes(x=start,y=AAF,colour=group)) + geom_point(size=0.5) + ylim(0,1)
LOH_AAF_g = LOH_AAF_g + facet_wrap(~level,switch = "x",scales="free_x",nrow=1) + theme_classic()
LOH_AAF_g = LOH_AAF_g + labs(x="",y="Alternative Allele Frequency")
LOH_AAF_g = LOH_AAF_g + scale_colour_manual(values=c("1"="blue","2"="cornflowerblue"))
LOH_AAF_g = LOH_AAF_g + theme(strip.text = element_text(size=14),
axis.title.y = element_text(size=16),
axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(size=14),
plot.title = element_text(size=16,face="bold"),
legend.position = "none",
strip.background  = element_blank(),
strip.placement = "outside")
LOH_cov_g = ggplot(LOH_cov_df,aes(x=start,y=cov,colour=group)) + geom_point(size=0.5)
LOH_cov_g = LOH_cov_g + facet_wrap(~level,switch = "x",scales="free_x",nrow=1) + theme_classic()
LOH_cov_g = LOH_cov_g + geom_hline(yintercept = 100,colour="red",linetype=2)
LOH_cov_g = LOH_cov_g + labs(x="",y="Relative Sequencing Depth")
LOH_cov_g = LOH_cov_g + scale_colour_manual(values=c("1"="blue","2"="cornflowerblue"))
LOH_cov_g = LOH_cov_g + scale_y_continuous(limits=c(-200,400),breaks=c(50,100,150),labels = c(50,100,150))
LOH_cov_g = LOH_cov_g + theme(strip.text = element_text(size=14),
axis.title = element_text(size=16),
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
plot.title=element_blank(),
axis.text.y = element_text(size=14),
legend.position = "none",
strip.background  = element_blank(),
strip.placement = "outside")
grid.arrange(LOH_AAF_g,LOH_cov_g,nrow=1)
grid.arrange(meiosis_AAF_g,meiosis_cov_g,
trisomy_AAF_g,trisomy_cov_g,
monosomy_AAF_g,monosomy_cov_g,
LOH_AAF_g,LOH_cov_g,nrow=4,ncol=2)
quartz(w=12,h=8)
grid.arrange(meiosis_AAF_g,meiosis_cov_g,
trisomy_AAF_g,trisomy_cov_g,
monosomy_AAF_g,monosomy_cov_g,
LOH_AAF_g,LOH_cov_g,nrow=4,ncol=2)
quartz(w=12,h=12)
grid.arrange(meiosis_AAF_g,meiosis_cov_g,
trisomy_AAF_g,trisomy_cov_g,
monosomy_AAF_g,monosomy_cov_g,
LOH_AAF_g,LOH_cov_g,nrow=4,ncol=2)
quartz(w=12,h=10)
source('/Volumes/home/ykong/Aneuploidy/GitHub_Code/MADSEQ/Plot/Aneuploidy_at_Levels_Fig2.R', echo=TRUE)
all_counts = read.table("/Volumes/home/greally-lab/T_Trial/PCA_downloads/Normal_BAMS/joint_geno/altered_vcf_header/dbsnp_id/NGB600_dbsnpid_unique_eigen_with_GT_count.txt",
sep="\t",header=F)[,1]
0.9*598
sum(all_counts>538)
sum(all_counts>=538)
sum(all_counts>=(0.8*598))
sum(all_counts>=(0.7*598))
sum(all_counts>=(0.6*598))
sum(all_counts>=(0.7*568))
48-3
chr5 = c()
13-7
chr1 = c(44,43,49,43,43,42,43,46,46,53,43,49,51,43,54,53,45)
chr2 = c(45,48,53,46,45,47,47,46,47,56,46,54,55,45,48,45,47)
chr3 = c(44,42,52,43,42,44,46,51,62,53,50,45,52,43,43,41,42)
chr4 = c(43,44,39,41,39,42,41,41,46,50,49,49,41,42,40,41,40)
chr5 = c(38,47,43,39,37,37,36,36,39,45,37,43,35,38,37,51,37)
chr6 = c(35,42,42,34,37,37,32,39,34,42,43,37,43,36,36,37,35)
chr7 = c(38,37,30,33,31,29,32,34,33,40,38,31,38,34,30,31,38)
chr8 = c(38,38,30,30,32,32,31,30,36,31,36,33,37,32,30,30,30)
chr9 = c(29,29,25,25,28,25,24,28,24,23,30,25,24,24,26,26,24)
chr10 = c(32,33,26,28,27,30,35,32,31,29,28,28,28,27,33,28,36)
chr11 = c(27,31,27,28,28,29,28,27,33,29,29,34,31,28,26,28,28)
chr12 = c(28,27,25,27,31,30,27,28,29,28,34,30,33,28,26,27,27)
chr13 = c(22,20,21,21,23,21,23,26,22,21,26,23,23,21,21,23,21)
chr14 = c(19,20,21,21,18,19,17,19,18,22,21,19,19,20,19,19,19)
chr15 = c(17,16,18,18,17,15,15,15,14,17,19,19,16,16,15,14,16)
chr16 = c(18,17,18,17,17,16,17,17,18,21,20,18,19,17,18,18,17)
chr17 = c(17,13,17,15,13,14,12,14,14,15,14,15,13,13,13,14,14)
chr18 = c(16,15,17,15,16,15,14,14,17,16,18,16,16,16,15,18,17)
chr19 = c(14,13,13,14,12,12,13,14,12,14,12,13,13,14,12,13,13)
chr20 = c(15,12,15,15,12,13,13,13,14,14,14,15,13,14,12,12,16)
chr21 = c(6,6,6,7,6,6,7,8,7,6,6,6,7,7,8,8,8)
chr22 = c(7,6,6,6,6,6.5,7,8,6,6,6,8,7,6,7,7,7)
time = cbind(chr1,chr2,chr3,chr4,chr5,chr6,chr7,chr8,chr9,chr10,chr11,
chr12,chr13,chr14chr15,chr16,chr17,chr18,chr19,chr20,chr21,chr22)
time = cbind(chr1,chr2,chr3,chr4,chr5,chr6,chr7,chr8,chr9,chr10,chr11,
chr12,chr13,chr14,chr15,chr16,chr17,chr18,chr19,chr20,chr21,chr22)
time
apply(time,2,mean)
a=apply(time,2,mean)
mean(a)
setwd("/Volumes/data/Project/Aneuploidy/MADSEQ/R")
